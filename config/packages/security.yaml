security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Security\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        jwt:
            lexik_jwt:
                class: App\Security\User
        credentials:
            id: App\Security\UserProvider
    firewalls:
        login:
            pattern: ^/api/v1/users/login$
            stateless: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                provider: credentials
        api:
            pattern: ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
                provider: jwt
            logout:
                path: app.v1.logout
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/v1, roles: !php/const App\Enum\UserEnum::BO_LOGIN_ALLOWED_ROLES }

